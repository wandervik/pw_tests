name: Deploy prebid on prod

on:
  workflow_dispatch


env:
  AWS_REGION: "eu-central-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_PATH_DEV: s3://intergi-duplicate

jobs:
  build-deploy-prod:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      # - run: |
      #     mkdir temp
      #     cp package.json temp/package.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # - name: Setup node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 16.10.0

      # - name: Install dependencies
      #   run: |
      #     touch ~/.netrc
      #     echo "machine github.com login ${{ secrets.REPOSITORY_ACCESS_TOKEN }}" > ~/.netrc
      #     npm ci

      # - run: npm run buildCDN:prod

      - name: Sort compressed files
        run: |
          mkdir gz br
          cd prebid
          mv *.gz ../gz/
          mv *.br ../br/
          cd ..

      - name: Push to bucket
        run: |
          aws s3 cp prebid ${{ env.AWS_S3_PATH_DEV }} --acl public-read --recursive
          aws s3 cp gz ${{ env.AWS_S3_PATH_DEV }} --acl public-read --recursive --content-encoding gz --content-type "text/javascript"
          aws s3 cp br ${{ env.AWS_S3_PATH_DEV }} --acl public-read --recursive --content-encoding br --content-type "text/javascript"

      # - name: Checkout changelog branch
      #   uses: actions/checkout@v2
      #   with:
      #     ref: changelog

      # - name: Pull repositiry
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: git pull

      # - name: Get current timestamp
      #   id: time
      #   uses: nanzm/get-time-action@v1.1
      #   with:
      #     timeZone: -5
      #     format: 'YYYY-MM-DD-HH-mm-ss'

      # - name: Write changelog
      #   env:
      #     TIME: "${{ steps.time.outputs.time }}"
      #   run: |
      #     echo "## Prebid content" >> CHANGELOG.md
      #     echo "[ ${{ env.TIME }} ] : deployed on prod <br />" >> CHANGELOG.md

      # - uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #    commit_message: Automated Change
      #    branch: changelog
      #    file_pattern: CHANGELOG.md test
