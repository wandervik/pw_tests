name: Test conditional jobs

on:
  push:
    branches: [ 'master' ]

env:
  AWS_REGION: "eu-central-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_S3_PATH_PROD: s3://tarabarova-prod

jobs:
  build-deploy-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          minor-wording:  'MINOR_UPDATE'
          major-wording:  'MAJOR_UPDATE'
          patch-wording:  'PATCH_UPDATE'
          skip-commit:  'true'
          skip-tag: 'true'

      - name: Get new version
        id: new_version
        uses: notiz-dev/github-action-json-property@release
        with:
            path: 'package.json'
            prop_path: 'version'
      - run: echo "new_version=${{steps.new_version.outputs.prop}}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check old version repositiry
        id: folder-check
        run: |
          if [[ $(aws s3 ls ${{ env.AWS_S3_PATH_PROD }}/${{ env.new_version }}| head) ]]; then echo "overriding"; else echo "new-folder"; fi

      - run: echo "RESULT=${{steps.folder-check.outputs.prop}}" >> $GITHUB_ENV

      - name: Push to bucket
        run: |
          aws s3 sync dist ${{ env.AWS_S3_PATH_PROD }}/${{ env.new_version }} --delete


  invalidation:
    runs-on: ubuntu-latest
    needs: build-deploy-dev
    # if: ${{ env.RESULT }} == 'overriding'

    environment: dev

    steps:
      - name: Invalidate CloudFront
        run: echo 'invalidation for version ${{ env.new_version }} is successfull'

# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       output1: ${{ steps.step1.outputs.test }}
#       output2: ${{ steps.step2.outputs.test }}
#     steps:
#       - id: step1
#         run: echo "::set-output name=test::hello"
#       - id: step2
#         run: echo "::set-output name=test::world"
#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#       - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}


#  if: github.event_name == 'release' && github.event.action == 'created'